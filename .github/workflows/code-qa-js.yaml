name: Code Quality Assurance - JavaScript/TypeScript

on:
  push:
    branches: [main]
    paths:
      - "**/*.css"
      - "**/*.js"
      - "**/*.json"
      - "**/*.jsx"
      - "**/*.ts"
      - "**/*.tsx"
      - ".github/workflows/code-qa-js.yaml"
      - "esbuild.js"
      - "jest.config.js"
      - "package*.json"
      - "src/**"
      - "tsconfig*.json"
  pull_request:
    branches: [main]
    paths:
      - "**/*.css"
      - "**/*.js"
      - "**/*.json"
      - "**/*.jsx"
      - "**/*.ts"
      - "**/*.tsx"
      - ".github/workflows/code-qa-js.yaml"
      - "esbuild.js"
      - "jest.config.js"
      - "package*.json"
      - "src/**"
      - "tsconfig*.json"

permissions:
  contents: read
jobs:
  code-quality-js-ts:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # Setup Node.js environment for TypeScript/JavaScript development
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      # Build Node.js project only (unit tests do not require other language binaries)
      - name: Build extension
        run: npm run compile

      # Run JavaScript/TypeScript specific checks
      - name: Code formatting check
        run: npm run prettier:check

      - name: TypeScript type check
        run: npm run check-types

      - name: ESLint check
        run: npm run lint

      - name: Run unit tests
        run: npm run test:jest
